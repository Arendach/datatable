import{_ as a,c as i,o as t,ae as e}from"./chunks/framework.CkYhvf0y.js";const E=JSON.parse('{"title":"Expanded Rows","description":"","frontmatter":{},"headers":[],"relativePath":"additional/expanded.md","filePath":"additional/expanded.md"}'),l={name:"additional/expanded.md"};function n(h,s,o,p,d,r){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="expanded-rows" tabindex="-1">Expanded Rows <a class="header-anchor" href="#expanded-rows" aria-label="Permalink to &quot;Expanded Rows&quot;">â€‹</a></h1><p>The <code>AresDataTable</code> component supports <strong>expandable rows</strong> via the <code>expand</code> slot. This allows you to display additional content below each row, such as details, nested tables, or actions.</p><hr><h2 id="ðŸ’¡-how-it-works" tabindex="-1">ðŸ’¡ How It Works <a class="header-anchor" href="#ðŸ’¡-how-it-works" aria-label="Permalink to &quot;ðŸ’¡ How It Works&quot;">â€‹</a></h2><p>When the <code>expand</code> slot is used, each row becomes expandable. Clicking the toggle control (typically a small arrow or button in the first column) will reveal the content provided by the <code>expand</code> slot.</p><p>The slot receives a single prop:</p><ul><li><code>value</code>: The original row object from the table data.</li></ul><hr><h2 id="âœ…-example-usage" tabindex="-1">âœ… Example Usage <a class="header-anchor" href="#âœ…-example-usage" aria-label="Permalink to &quot;âœ… Example Usage&quot;">â€‹</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DataTable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;datatable&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  unique-id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orders&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is-server-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;template #expand=&quot;{ value }&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;div class=&quot;p-2 bg-light border rounded&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;strong&gt;Name:&lt;/strong&gt; &lt;span v-html=&quot;value.name&quot;&gt;&lt;/span&gt;&lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;strong&gt;Email:&lt;/strong&gt; &lt;span v-html=&quot;value.email&quot;&gt;&lt;/span&gt;&lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;strong&gt;Details:&lt;/strong&gt; {{ value.details }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DataTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h2 id="ðŸ“¦-notes" tabindex="-1">ðŸ“¦ Notes <a class="header-anchor" href="#ðŸ“¦-notes" aria-label="Permalink to &quot;ðŸ“¦ Notes&quot;">â€‹</a></h2><ul><li>The component automatically detects whether the <code>expand</code> slot is present and adjusts the table accordingly.</li><li>To check if the slot is registered, the internal logic uses:<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slotsStore.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasSlot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;expand&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li>You can combine this with conditional rendering inside the slot if only certain rows should show additional data.</li></ul><hr><h2 id="ðŸ“š-related" tabindex="-1">ðŸ“š Related <a class="header-anchor" href="#ðŸ“š-related" aria-label="Permalink to &quot;ðŸ“š Related&quot;">â€‹</a></h2><ul><li><a href="/datatable/additional/slots.html">Custom Slots</a></li><li><a href="/datatable/base/columns.html">Column Configuration</a></li></ul>`,16)]))}const c=a(l,[["render",n]]);export{E as __pageData,c as default};
